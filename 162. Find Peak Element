class Solution {
public:
    int fp(vector<int> &arr, int l, int r) {
        if(r-l == 1) {
            if(arr[r] > arr[l]) {
                return r;
            }
            else if(arr[l] > arr[r]) {
                return l;
            }
        }
        else if(r-l==0) {
            return r;
        }
        int mid = (l+r)/2;
        if(arr[mid] > arr[mid-1] && arr[mid] > arr[mid+1]) {
            return mid;
        }
        else if(arr[mid-1] > arr[mid] && arr[mid] > arr[mid+1]) {
            return fp(arr,l,mid-1);
        }
        else if(arr[mid+1] > arr[mid] && arr[mid] > arr[mid-1]) {
            return fp(arr,mid+1,r);
        }
        else {
            return fp(arr,l,mid-1);
        }
    }
    int findPeakElement(vector<int>& nums) {
        int n = nums.size();
        return fp(nums,0,n-1);
    }
};
